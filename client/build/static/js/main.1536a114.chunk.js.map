{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["query","axios","get","savedBooks","post","id","delete","Jumbotron","children","className","Container","fluid","Row","Col","size","split","map","join","SavedResult","props","length","savedbook","title","src","image","alt","authors","description","_id","onClick","handleDeleteButton","href","link","target","SaveBook","state","API","then","res","componentDidMount","catch","err","console","log","setState","data","this","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","key","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","NoMatch","role","aria-label","Nav","Footer","App","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1536a114.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function(query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n\n    // Gets all books\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    // Saves a book to the database\n    saveBook: function (savedBooks) {\n        return axios.post(\"/api/books\", savedBooks);\n    },\n\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n}","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n    return (\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\n            <div className=\"container text-center\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\"\nimport {Row, Col} from \"../Grid\"\n\nconst SavedResult = props => {\n    return (props.savedBooks.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                </div>\n            </div>\n        </div>\n    ):(\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                    {props.savedBooks.map(savedbook => {\n                        return (\n                            <li className=\"saved-list list-group-item\">\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\n                                    {/* col-3 show image of the book */}\n                                    <Col size=\"2\" className=\"bookImage\">\n                                        <img src={savedbook.image} alt={savedbook.title} />\n                                    </Col>\n                                    <Col size=\"1\" className=\"emptyCol\"/>\n                                    {/* col-9 show information of the book */}\n                                    <Col size=\"9\" className=\"bookInfo\">\n                                        <Row>\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\n                                        </Row>\n                                        <Row>\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\n                                        </Row>\n                                        <Row>\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <br></br>\n                                <Row className=\"buttonDiv \">\n                                    <button className=\"deleteBook btn btn-danger\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\n                                        Delete Book\n                                    </button>\n                                    <a href={savedbook.link} target=\"_blank\">\n                                        <button className=\"viewBook btn btn-success\">\n                                            View Book\n                                        </button>\n                                    </a>\n                                </Row>\n                            </li>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default SavedResult","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container} from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\"\n\nclass SaveBook extends Component {\n    state = {\n        savedBooks: []\n    };\n\n    //when this component mounts, grab all books that were save to the database \n    componentDidMount() {\n        API.getBooks()\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err))\n    }\n\n    //function to remove book by id\n    handleDeleteButton = id => {\n        API.deleteBook(id)\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"container\">\n                <Jumbotron />\n                <Container>\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\n\nexport default SaveBook ","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchForm = props => {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"BookSearchLabel\"><h3>Search For Book</h3></label>\n                <br></br>\n                <input className=\"col-12 form-control\"\n                    value={props.search}\n                    type=\"text\"\n                    name=\"searchBook\"\n                    placeholder=\"Enter Book's Name\"\n                    onChange={props.handleInputChange}\n                />\n            </div>\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\n                Submit\n            </button>\n        </form>\n    )\n}\n\n\n\nexport default SearchForm","import React from \"react\";\nimport \"./style.css\";\nimport {Row, Col} from \"../Grid\"\n\nconst SearchResult = props => {\n    return (props.books.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Search Results</h3>\n                </div>\n            </div>\n        </div>\n    ) : (\n            <div className=\"card\">\n                <div className=\"card-body player\">\n                    <div className=\"article\">\n                        <h3>Search Results</h3>\n                        {props.books.map(book => {\n                            return (\n                                <li className=\"search-list list-group-item\">\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\n                                        {/* col-3 show image of the book */}\n                                        <Col size=\"2\" className=\"bookImage\">\n                                            <img src={book.image} alt={book.title} />\n                                        </Col>\n                                        <Col size=\"1\" className=\"emptyCol\"/>\n                                        {/* col-9 show information of the book */}\n                                        <Col size=\"9\" className=\"bookInfo\">\n                                            <Row>\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\n                                            </Row>\n                                            <Row>\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\n                                            </Row>\n                                            <Row>\n                                                <p className=\"bookDescription\">{book.description}</p>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row className=\"buttonDiv \">\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\n                                            Save Book\n                                        </button>\n                                        <a href={book.link} target=\"_blank\">\n                                            <button className=\"viewBook btn btn-success\">\n                                                View Book\n                                        </button>\n                                        </a>\n                                    </Row>\n                                </li>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nexport default SearchResult","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\"\n\n\nclass SearchBooks extends Component {\n    //create state\n    state = {\n        search: \"\",\n        books: [],\n        error: \"\",\n        message: \"\"\n    };\n\n    //function to take value of what enter in the search bar\n    handleInputChange = event => {\n        this.setState({ search: event.target.value })\n    }\n\n    //function to control the submit button of the search form \n    handleFormSubmit = event => {\n        event.preventDefault();\n        // once it clicks it connects to the google book api with the search value\n        API.getGoogleSearchBooks(this.state.search)\n            .then(res => {\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                }\n                else {\n                    // store response in a array\n                    let results = res.data.items\n                    //map through the array \n                    results = results.map(result => {\n                        //store each book information in a new object \n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        }\n                        return result;\n                    })\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n                    this.setState({ books: results, error: \"\" })\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    }\n\n    handleSavedButton = event => {\n        // console.log(event)\n        event.preventDefault();\n        console.log(this.state.books)\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        API.saveBook(savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\n                </Container>\n            </Container>\n        )\n    }\n\n\n}\n\nexport default SearchBooks","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-white\">404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <h2 className=\"text-white\">Google Book Search</h2>\n            </a>\n            <div id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\" id=\"home\">\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-info text-white\">Search Books</button></a>\n                    </li>\n                    <li className=\"nav-item\" id=\"report\">\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-warning text-white\">Saved Books</button></a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = () => (\n\t<footer className = \"page-footer\">\n\t\t<div className = \"container-fluid text-center\">\n\t\t\t<p>Duncan Hieu M. Dam</p>\n\t\t</div>\t\n\t</footer>\n);\n\nexport default Footer;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\"\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={SaveBooks} />\n          <Route exact path=\"/saved/:id\" component={SaveBooks} />\n          <Route component={NoMatch} /> \n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}